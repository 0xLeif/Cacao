//
//  TestStyleKit.swift
//  Cacao
//
//  Created by Alsey Coleman Miller on 5/13/16.
//  Copyright (c) 2016 PureSwift. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

import Silica
import Cacao
import SwiftCoreGraphics
import SwiftUIKit

public typealias CGRect = SwiftCoreGraphics.CGRect

public class TestStyleKit : NSObject {

    //// Cache

    private struct Cache {
        static let wirelessBlue: UIColor = UIColor(red: 0.278, green: 0.506, blue: 0.976, alpha: 1.000)
    }

    //// Colors

    public class var wirelessBlue: UIColor { return Cache.wirelessBlue }

    //// Drawing Methods

    public class func drawCanvas1(frame frame: CGRect = CGRect(x: 0, y: 0, width: 240, height: 120)) {
        //// Color Declarations
        let red = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let white = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: frame.minX + floor(frame.width * 0.00000 + 0.5), y: frame.minY + floor(frame.height * 0.00000 + 0.5), width: floor(frame.width * 1.00000 + 0.5) - floor(frame.width * 0.00000 + 0.5), height: floor(frame.height * 1.00000 + 0.5) - floor(frame.height * 0.00000 + 0.5)))
        white.setFill()
        rectanglePath.fill()


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalInRect: CGRect(x: frame.minX + floor(frame.width * 0.33333 + 0.5), y: frame.minY + floor(frame.height * 0.16667 + 0.5), width: floor(frame.width * 0.66667 + 0.5) - floor(frame.width * 0.33333 + 0.5), height: floor(frame.height * 0.83333 + 0.5) - floor(frame.height * 0.16667 + 0.5)))
        red.setFill()
        ovalPath.fill()
    }

    public class func drawCanvas2(frame frame: CGRect = CGRect(x: 0, y: 0, width: 240, height: 120)) {
        //// Color Declarations
        let white = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let blue = UIColor(red: 0.151, green: 0.277, blue: 0.801, alpha: 1.000)

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: frame.minX + floor(frame.width * 0.00000 + 0.5), y: frame.minY + floor(frame.height * 0.00000 + 0.5), width: floor(frame.width * 1.00000 + 0.5) - floor(frame.width * 0.00000 + 0.5), height: floor(frame.height * 1.00000 + 0.5) - floor(frame.height * 0.00000 + 0.5)))
        white.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: frame.minX + 95, y: frame.minY + 35, width: 50, height: 50))
        blue.setFill()
        rectangle2Path.fill()
    }

    public class func drawCanvas3(frame frame: CGRect = CGRect(x: 0, y: 0, width: 240, height: 120)) {
        //// Color Declarations
        let white = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let blue = UIColor(red: 0.151, green: 0.277, blue: 0.801, alpha: 1.000)

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: frame.minX + floor(frame.width * 0.00000 + 0.5), y: frame.minY + floor(frame.height * 0.00000 + 0.5), width: floor(frame.width * 1.00000 + 0.5) - floor(frame.width * 0.00000 + 0.5), height: floor(frame.height * 1.00000 + 0.5) - floor(frame.height * 0.00000 + 0.5)))
        white.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: frame.minX, y: frame.minY, width: floor((frame.width) * 0.20833 + 0.5), height: floor((frame.height) * 0.41667 + 0.5)))
        blue.setFill()
        rectangle2Path.fill()
    }

    public class func drawCanvas4(frame frame: CGRect = CGRect(x: 0, y: 0, width: 240, height: 120)) {
        //// Color Declarations
        let black = UIColor(red: 0.064, green: 0.064, blue: 0.064, alpha: 1.000)
        let red = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let white = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let blue = UIColor(red: 0.151, green: 0.277, blue: 0.801, alpha: 1.000)


        //// Subframes
        let group3: CGRect = CGRect(x: frame.minX + floor((frame.width - 45.13) * 0.49777 + 0.5), y: frame.minY + floor((frame.height - 61.18) * 0.95206 - 0.32) + 0.82, width: 45.13, height: 61.18)


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: frame.minX + floor(frame.width * 0.00000 + 0.5), y: frame.minY + floor(frame.height * 0.00000 + 0.5), width: floor(frame.width * 1.00000 + 0.5) - floor(frame.width * 0.00000 + 0.5), height: floor(frame.height * 1.00000 + 0.5) - floor(frame.height * 0.00000 + 0.5)))
        white.setFill()
        rectanglePath.fill()


        //// Star Drawing
        let starPath = UIBezierPath()
        starPath.moveToPoint(CGPoint(x: frame.minX + 0.12500 * frame.width, y: frame.minY + 0.06667 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.16174 * frame.width, y: frame.minY + 0.17387 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.22407 * frame.width, y: frame.minY + 0.21062 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.18444 * frame.width, y: frame.minY + 0.31363 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.18623 * frame.width, y: frame.minY + 0.44355 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.12500 * frame.width, y: frame.minY + 0.40000 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.06377 * frame.width, y: frame.minY + 0.44355 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.06556 * frame.width, y: frame.minY + 0.31363 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.02593 * frame.width, y: frame.minY + 0.21062 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.08826 * frame.width, y: frame.minY + 0.17387 * frame.height))
        starPath.closePath()
        red.setFill()
        starPath.fill()


        //// Polygon Drawing
        let polygonPath = UIBezierPath()
        polygonPath.moveToPoint(CGPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.06667 * frame.height))
        polygonPath.addLineToPoint(CGPoint(x: frame.minX + 0.59907 * frame.width, y: frame.minY + 0.21062 * frame.height))
        polygonPath.addLineToPoint(CGPoint(x: frame.minX + 0.56123 * frame.width, y: frame.minY + 0.44355 * frame.height))
        polygonPath.addLineToPoint(CGPoint(x: frame.minX + 0.43877 * frame.width, y: frame.minY + 0.44355 * frame.height))
        polygonPath.addLineToPoint(CGPoint(x: frame.minX + 0.40093 * frame.width, y: frame.minY + 0.21062 * frame.height))
        polygonPath.closePath()
        blue.setFill()
        polygonPath.fill()


        //// Group
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPoint(x: frame.minX + 0.13151 * frame.width, y: frame.minY + 0.85823 * frame.height))
        bezierPath.addLineToPoint(CGPoint(x: frame.minX + 0.14583 * frame.width, y: frame.minY + 0.88698 * frame.height))
        bezierPath.addLineToPoint(CGPoint(x: frame.minX + 0.16016 * frame.width, y: frame.minY + 0.85823 * frame.height))
        bezierPath.addCurveToPoint(CGPoint(x: frame.minX + 0.14583 * frame.width, y: frame.minY + 0.84517 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.15625 * frame.width, y: frame.minY + 0.85039 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.15104 * frame.width, y: frame.minY + 0.84517 * frame.height))
        bezierPath.addCurveToPoint(CGPoint(x: frame.minX + 0.13151 * frame.width, y: frame.minY + 0.85823 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.14062 * frame.width, y: frame.minY + 0.84517 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.13411 * frame.width, y: frame.minY + 0.85039 * frame.height))
        bezierPath.closePath()
        bezierPath.miterLimit = 4;

        TestStyleKit.wirelessBlue.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPoint(x: frame.minX + 0.14583 * frame.width, y: frame.minY + 0.63348 * frame.height))
        bezier2Path.addCurveToPoint(CGPoint(x: frame.minX + 0.23568 * frame.width, y: frame.minY + 0.70666 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.18099 * frame.width, y: frame.minY + 0.63348 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.21224 * frame.width, y: frame.minY + 0.66223 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.25000 * frame.width, y: frame.minY + 0.67791 * frame.height))
        bezier2Path.addCurveToPoint(CGPoint(x: frame.minX + 0.14583 * frame.width, y: frame.minY + 0.59167 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.22396 * frame.width, y: frame.minY + 0.62564 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.18620 * frame.width, y: frame.minY + 0.59167 * frame.height))
        bezier2Path.addCurveToPoint(CGPoint(x: frame.minX + 0.04167 * frame.width, y: frame.minY + 0.67791 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.10547 * frame.width, y: frame.minY + 0.59167 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.06771 * frame.width, y: frame.minY + 0.62564 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.05599 * frame.width, y: frame.minY + 0.70666 * frame.height))
        bezier2Path.addCurveToPoint(CGPoint(x: frame.minX + 0.14583 * frame.width, y: frame.minY + 0.63348 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.07943 * frame.width, y: frame.minY + 0.66223 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.11068 * frame.width, y: frame.minY + 0.63348 * frame.height))
        bezier2Path.closePath()
        bezier2Path.miterLimit = 4;

        TestStyleKit.wirelessBlue.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.moveToPoint(CGPoint(x: frame.minX + 0.07161 * frame.width, y: frame.minY + 0.73802 * frame.height))
        bezier3Path.addLineToPoint(CGPoint(x: frame.minX + 0.08594 * frame.width, y: frame.minY + 0.76676 * frame.height))
        bezier3Path.addCurveToPoint(CGPoint(x: frame.minX + 0.14583 * frame.width, y: frame.minY + 0.71972 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.10156 * frame.width, y: frame.minY + 0.73802 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.12240 * frame.width, y: frame.minY + 0.71972 * frame.height))
        bezier3Path.addCurveToPoint(CGPoint(x: frame.minX + 0.20573 * frame.width, y: frame.minY + 0.76938 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.16927 * frame.width, y: frame.minY + 0.71972 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.19010 * frame.width, y: frame.minY + 0.73802 * frame.height))
        bezier3Path.addLineToPoint(CGPoint(x: frame.minX + 0.22005 * frame.width, y: frame.minY + 0.74063 * frame.height))
        bezier3Path.addCurveToPoint(CGPoint(x: frame.minX + 0.14583 * frame.width, y: frame.minY + 0.67529 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.20182 * frame.width, y: frame.minY + 0.69882 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.17448 * frame.width, y: frame.minY + 0.67529 * frame.height))
        bezier3Path.addCurveToPoint(CGPoint(x: frame.minX + 0.07161 * frame.width, y: frame.minY + 0.73802 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.11719 * frame.width, y: frame.minY + 0.67529 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.08984 * frame.width, y: frame.minY + 0.69882 * frame.height))
        bezier3Path.closePath()
        bezier3Path.miterLimit = 4;

        TestStyleKit.wirelessBlue.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.moveToPoint(CGPoint(x: frame.minX + 0.10156 * frame.width, y: frame.minY + 0.79812 * frame.height))
        bezier4Path.addLineToPoint(CGPoint(x: frame.minX + 0.11589 * frame.width, y: frame.minY + 0.82687 * frame.height))
        bezier4Path.addCurveToPoint(CGPoint(x: frame.minX + 0.14583 * frame.width, y: frame.minY + 0.80335 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.12370 * frame.width, y: frame.minY + 0.81119 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.13411 * frame.width, y: frame.minY + 0.80335 * frame.height))
        bezier4Path.addCurveToPoint(CGPoint(x: frame.minX + 0.17578 * frame.width, y: frame.minY + 0.82687 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.15755 * frame.width, y: frame.minY + 0.80335 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.16797 * frame.width, y: frame.minY + 0.81380 * frame.height))
        bezier4Path.addLineToPoint(CGPoint(x: frame.minX + 0.19010 * frame.width, y: frame.minY + 0.79812 * frame.height))
        bezier4Path.addCurveToPoint(CGPoint(x: frame.minX + 0.14583 * frame.width, y: frame.minY + 0.76154 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.17969 * frame.width, y: frame.minY + 0.77460 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.16276 * frame.width, y: frame.minY + 0.76154 * frame.height))
        bezier4Path.addCurveToPoint(CGPoint(x: frame.minX + 0.10156 * frame.width, y: frame.minY + 0.79812 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.12891 * frame.width, y: frame.minY + 0.76154 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.11198 * frame.width, y: frame.minY + 0.77460 * frame.height))
        bezier4Path.closePath()
        bezier4Path.miterLimit = 4;

        TestStyleKit.wirelessBlue.setFill()
        bezier4Path.fill()




        //// Group 3
        //// Page-1
        //// Bluetooth_Smart_Logo
        //// Shape Drawing
        let shapePath = UIBezierPath()
        shapePath.moveToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 15.11))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 30.1, y: group3.minY + 20.17))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 25.23))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 15.11))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 15.11))
        shapePath.closePath()
        shapePath.moveToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 46.07))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 30.1, y: group3.minY + 41.01))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 35.97))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 46.07))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 46.07))
        shapePath.closePath()
        shapePath.moveToPoint(CGPoint(x: group3.minX + 19.64, y: group3.minY + 30.6))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 8.71, y: group3.minY + 19.63))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 11.88, y: group3.minY + 16.46))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 20.59, y: group3.minY + 25.17))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 20.59, y: group3.minY + 4.29))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 36.43, y: group3.minY + 20.13))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.97, y: group3.minY + 30.6))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 36.43, y: group3.minY + 41.05))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 20.59, y: group3.minY + 56.89))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 20.59, y: group3.minY + 36.02))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 11.88, y: group3.minY + 44.72))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 8.71, y: group3.minY + 41.55))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 19.64, y: group3.minY + 30.6))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 19.64, y: group3.minY + 30.6))
        shapePath.closePath()
        shapePath.moveToPoint(CGPoint(x: group3.minX + 22.57, y: group3.minY + 61.18))
        shapePath.addCurveToPoint(CGPoint(x: group3.minX + 45.13, y: group3.minY + 30.6), controlPoint1: CGPoint(x: group3.minX + 35.93, y: group3.minY + 61.18), controlPoint2: CGPoint(x: group3.minX + 45.13, y: group3.minY + 54.83))
        shapePath.addCurveToPoint(CGPoint(x: group3.minX + 22.57, y: group3.minY), controlPoint1: CGPoint(x: group3.minX + 45.13, y: group3.minY + 6.35), controlPoint2: CGPoint(x: group3.minX + 35.93, y: group3.minY))
        shapePath.addCurveToPoint(CGPoint(x: group3.minX, y: group3.minY + 30.6), controlPoint1: CGPoint(x: group3.minX + 9.22, y: group3.minY), controlPoint2: CGPoint(x: group3.minX, y: group3.minY + 6.35))
        shapePath.addCurveToPoint(CGPoint(x: group3.minX + 22.57, y: group3.minY + 61.18), controlPoint1: CGPoint(x: group3.minX, y: group3.minY + 54.83), controlPoint2: CGPoint(x: group3.minX + 9.22, y: group3.minY + 61.18))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 22.57, y: group3.minY + 61.18))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 22.57, y: group3.minY + 61.18))
        shapePath.closePath()
        shapePath.miterLimit = 4;

        shapePath.usesEvenOddFillRule = true;

        TestStyleKit.wirelessBlue.setFill()
        shapePath.fill()








        //// key.svg Group
        //// Group 4
        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.moveToPoint(CGPoint(x: frame.minX + 200.25, y: frame.minY + 76.5))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 191.5, y: frame.minY + 85.25), controlPoint1: CGPoint(x: frame.minX + 195.38, y: frame.minY + 76.5), controlPoint2: CGPoint(x: frame.minX + 191.5, y: frame.minY + 80.38))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 200.25, y: frame.minY + 94), controlPoint1: CGPoint(x: frame.minX + 191.5, y: frame.minY + 90.12), controlPoint2: CGPoint(x: frame.minX + 195.38, y: frame.minY + 94))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 209, y: frame.minY + 85.25), controlPoint1: CGPoint(x: frame.minX + 205.12, y: frame.minY + 94), controlPoint2: CGPoint(x: frame.minX + 209, y: frame.minY + 90.12))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 200.25, y: frame.minY + 76.5), controlPoint1: CGPoint(x: frame.minX + 209, y: frame.minY + 80.38), controlPoint2: CGPoint(x: frame.minX + 205.12, y: frame.minY + 76.5))
        bezier5Path.closePath()
        bezier5Path.moveToPoint(CGPoint(x: frame.minX + 198.38, y: frame.minY + 86.5))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 195.25, y: frame.minY + 83.38), controlPoint1: CGPoint(x: frame.minX + 196.62, y: frame.minY + 86.5), controlPoint2: CGPoint(x: frame.minX + 195.25, y: frame.minY + 85.12))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 198.38, y: frame.minY + 80.25), controlPoint1: CGPoint(x: frame.minX + 195.25, y: frame.minY + 81.62), controlPoint2: CGPoint(x: frame.minX + 196.62, y: frame.minY + 80.25))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 201.5, y: frame.minY + 83.38), controlPoint1: CGPoint(x: frame.minX + 200.12, y: frame.minY + 80.25), controlPoint2: CGPoint(x: frame.minX + 201.5, y: frame.minY + 81.62))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 198.38, y: frame.minY + 86.5), controlPoint1: CGPoint(x: frame.minX + 201.5, y: frame.minY + 85.12), controlPoint2: CGPoint(x: frame.minX + 200.12, y: frame.minY + 86.5))
        bezier5Path.closePath()
        bezier5Path.miterLimit = 4;

        black.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.moveToPoint(CGPoint(x: frame.minX + 207.75, y: frame.minY + 87.75))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 202.75, y: frame.minY + 92.75))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 205.25, y: frame.minY + 95.25))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 205.25, y: frame.minY + 95.25))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 207.75, y: frame.minY + 95.25))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 207.75, y: frame.minY + 97.75))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 207.75, y: frame.minY + 97.75))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 210.25, y: frame.minY + 97.75))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 210.25, y: frame.minY + 100.25))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 211.12, y: frame.minY + 101.12))
        bezier6Path.addCurveToPoint(CGPoint(x: frame.minX + 212, y: frame.minY + 101.5), controlPoint1: CGPoint(x: frame.minX + 211.38, y: frame.minY + 101.38), controlPoint2: CGPoint(x: frame.minX + 211.62, y: frame.minY + 101.5))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 215.25, y: frame.minY + 101.5))
        bezier6Path.addCurveToPoint(CGPoint(x: frame.minX + 216.5, y: frame.minY + 100.25), controlPoint1: CGPoint(x: frame.minX + 216, y: frame.minY + 101.5), controlPoint2: CGPoint(x: frame.minX + 216.5, y: frame.minY + 101))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 216.5, y: frame.minY + 97))
        bezier6Path.addCurveToPoint(CGPoint(x: frame.minX + 216.12, y: frame.minY + 96.12), controlPoint1: CGPoint(x: frame.minX + 216.5, y: frame.minY + 96.62), controlPoint2: CGPoint(x: frame.minX + 216.38, y: frame.minY + 96.38))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 207.75, y: frame.minY + 87.75))
        bezier6Path.closePath()
        bezier6Path.miterLimit = 4;

        black.setFill()
        bezier6Path.fill()
    }

}
