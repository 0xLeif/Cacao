//
//  TestStyleKit.swift
//  Cacao
//
//  Created by Alsey Coleman Miller on 5/13/16.
//  Copyright (c) 2016 PureSwift. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

import Silica
import Cacao
import SwiftCoreGraphics
import SwiftUIKit

public class TestStyleKit : NSObject {

    //// Cache

    private struct Cache {
        static let wirelessBlue: UIColor = UIColor(red: 0.278, green: 0.506, blue: 0.976, alpha: 1.000)
    }

    //// Colors

    public class var wirelessBlue: UIColor { return Cache.wirelessBlue }

    //// Drawing Methods

    public class func drawSimpleShapes(frame frame: CGRect = CGRect(x: 0, y: 0, width: 240, height: 120)) {
        //// Color Declarations
        let red = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let white = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let blue = UIColor(red: 0.151, green: 0.277, blue: 0.801, alpha: 1.000)
        let green = UIColor(red: 0.320, green: 0.800, blue: 0.350, alpha: 1.000)

        //// Background Rectangle Drawing
        let backgroundRectanglePath = UIBezierPath(rect: CGRect(x: frame.minX + floor(frame.width * 0.00000 + 0.5), y: frame.minY + floor(frame.height * 0.00000 + 0.5), width: floor(frame.width * 1.00000 + 0.5) - floor(frame.width * 0.00000 + 0.5), height: floor(frame.height * 1.00000 + 0.5) - floor(frame.height * 0.00000 + 0.5)))
        white.setFill()
        backgroundRectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: frame.minX + floor(frame.width * 0.00000 + 0.5), y: frame.minY + floor(frame.height * 0.00000 + 0.5), width: floor(frame.width * 0.20833 + 0.5) - floor(frame.width * 0.00000 + 0.5), height: floor(frame.height * 0.41667 + 0.5) - floor(frame.height * 0.00000 + 0.5)))
        red.setFill()
        rectangle2Path.fill()


        //// Polygon Drawing
        let polygonPath = UIBezierPath()
        polygonPath.moveToPoint(CGPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.00000 * frame.height))
        polygonPath.addLineToPoint(CGPoint(x: frame.minX + 0.59907 * frame.width, y: frame.minY + 0.14395 * frame.height))
        polygonPath.addLineToPoint(CGPoint(x: frame.minX + 0.56123 * frame.width, y: frame.minY + 0.37688 * frame.height))
        polygonPath.addLineToPoint(CGPoint(x: frame.minX + 0.43877 * frame.width, y: frame.minY + 0.37688 * frame.height))
        polygonPath.addLineToPoint(CGPoint(x: frame.minX + 0.40093 * frame.width, y: frame.minY + 0.14395 * frame.height))
        polygonPath.closePath()
        green.setFill()
        polygonPath.fill()


        //// Star Drawing
        let starPath = UIBezierPath()
        starPath.moveToPoint(CGPoint(x: frame.minX + 0.90000 * frame.width, y: frame.minY + 0.00000 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.93674 * frame.width, y: frame.minY + 0.10721 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.99907 * frame.width, y: frame.minY + 0.14395 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.95944 * frame.width, y: frame.minY + 0.24696 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.96123 * frame.width, y: frame.minY + 0.37688 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.90000 * frame.width, y: frame.minY + 0.33333 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.83877 * frame.width, y: frame.minY + 0.37688 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.84056 * frame.width, y: frame.minY + 0.24696 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.80093 * frame.width, y: frame.minY + 0.14395 * frame.height))
        starPath.addLineToPoint(CGPoint(x: frame.minX + 0.86326 * frame.width, y: frame.minY + 0.10721 * frame.height))
        starPath.closePath()
        blue.setFill()
        starPath.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPoint(x: frame.minX + 0.20833 * frame.width, y: frame.minY + 0.60000 * frame.height))
        bezierPath.addLineToPoint(CGPoint(x: frame.minX + 0.00000 * frame.width, y: frame.minY + 1.00000 * frame.height))
        bezierPath.addLineToPoint(CGPoint(x: frame.minX + 0.20833 * frame.width, y: frame.minY + 1.00000 * frame.height))
        blue.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPoint(x: frame.minX + 0.49583 * frame.width, y: frame.minY + 0.62500 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.42917 * frame.width, y: frame.minY + 0.68333 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.40000 * frame.width, y: frame.minY + 0.74167 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.40000 * frame.width, y: frame.minY + 0.81667 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.40000 * frame.width, y: frame.minY + 0.91667 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.40000 * frame.width, y: frame.minY + 1.00000 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.42917 * frame.width, y: frame.minY + 1.00000 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.49583 * frame.width, y: frame.minY + 1.00000 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.55000 * frame.width, y: frame.minY + 1.00000 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.57083 * frame.width, y: frame.minY + 1.00000 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.60417 * frame.width, y: frame.minY + 0.81667 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.60417 * frame.width, y: frame.minY + 0.68333 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.57083 * frame.width, y: frame.minY + 0.62500 * frame.height))
        red.setFill()
        bezier2Path.fill()


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalInRect: CGRect(x: frame.minX + floor(frame.width * 0.79167 + 0.5), y: frame.minY + floor(frame.height * 0.58333 + 0.5), width: floor(frame.width * 1.00000 + 0.5) - floor(frame.width * 0.79167 + 0.5), height: floor(frame.height * 1.00000 + 0.5) - floor(frame.height * 0.58333 + 0.5)))
        green.setFill()
        ovalPath.fill()
    }

    public class func drawCanvas2(frame frame: CGRect = CGRect(x: 0, y: 0, width: 240, height: 120)) {
        //// Color Declarations
        let black = UIColor(red: 0.064, green: 0.064, blue: 0.064, alpha: 1.000)


        //// Subframes
        let group3: CGRect = CGRect(x: frame.minX + floor((frame.width - 45.13) * 0.49777 + 0.5), y: frame.minY + floor((frame.height - 61.18) * 0.49303 - 0.32) + 0.82, width: 45.13, height: 61.18)


        //// Group
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPoint(x: frame.minX + 0.16901 * frame.width, y: frame.minY + 0.61657 * frame.height))
        bezierPath.addLineToPoint(CGPoint(x: frame.minX + 0.18333 * frame.width, y: frame.minY + 0.64531 * frame.height))
        bezierPath.addLineToPoint(CGPoint(x: frame.minX + 0.19766 * frame.width, y: frame.minY + 0.61657 * frame.height))
        bezierPath.addCurveToPoint(CGPoint(x: frame.minX + 0.18333 * frame.width, y: frame.minY + 0.60350 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.19375 * frame.width, y: frame.minY + 0.60873 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.18854 * frame.width, y: frame.minY + 0.60350 * frame.height))
        bezierPath.addCurveToPoint(CGPoint(x: frame.minX + 0.16901 * frame.width, y: frame.minY + 0.61657 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.17813 * frame.width, y: frame.minY + 0.60350 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.17161 * frame.width, y: frame.minY + 0.60873 * frame.height))
        bezierPath.closePath()
        bezierPath.miterLimit = 4;

        TestStyleKit.wirelessBlue.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPoint(x: frame.minX + 0.18333 * frame.width, y: frame.minY + 0.39181 * frame.height))
        bezier2Path.addCurveToPoint(CGPoint(x: frame.minX + 0.27318 * frame.width, y: frame.minY + 0.46499 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.21849 * frame.width, y: frame.minY + 0.39181 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.24974 * frame.width, y: frame.minY + 0.42056 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.28750 * frame.width, y: frame.minY + 0.43624 * frame.height))
        bezier2Path.addCurveToPoint(CGPoint(x: frame.minX + 0.18333 * frame.width, y: frame.minY + 0.35000 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.26146 * frame.width, y: frame.minY + 0.38397 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.22370 * frame.width, y: frame.minY + 0.35000 * frame.height))
        bezier2Path.addCurveToPoint(CGPoint(x: frame.minX + 0.07917 * frame.width, y: frame.minY + 0.43624 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.14297 * frame.width, y: frame.minY + 0.35000 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.10521 * frame.width, y: frame.minY + 0.38397 * frame.height))
        bezier2Path.addLineToPoint(CGPoint(x: frame.minX + 0.09349 * frame.width, y: frame.minY + 0.46499 * frame.height))
        bezier2Path.addCurveToPoint(CGPoint(x: frame.minX + 0.18333 * frame.width, y: frame.minY + 0.39181 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.11693 * frame.width, y: frame.minY + 0.42056 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.14818 * frame.width, y: frame.minY + 0.39181 * frame.height))
        bezier2Path.closePath()
        bezier2Path.miterLimit = 4;

        TestStyleKit.wirelessBlue.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.moveToPoint(CGPoint(x: frame.minX + 0.10911 * frame.width, y: frame.minY + 0.49635 * frame.height))
        bezier3Path.addLineToPoint(CGPoint(x: frame.minX + 0.12344 * frame.width, y: frame.minY + 0.52510 * frame.height))
        bezier3Path.addCurveToPoint(CGPoint(x: frame.minX + 0.18333 * frame.width, y: frame.minY + 0.47806 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.13906 * frame.width, y: frame.minY + 0.49635 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.15990 * frame.width, y: frame.minY + 0.47806 * frame.height))
        bezier3Path.addCurveToPoint(CGPoint(x: frame.minX + 0.24323 * frame.width, y: frame.minY + 0.52771 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.20677 * frame.width, y: frame.minY + 0.47806 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.22760 * frame.width, y: frame.minY + 0.49635 * frame.height))
        bezier3Path.addLineToPoint(CGPoint(x: frame.minX + 0.25755 * frame.width, y: frame.minY + 0.49896 * frame.height))
        bezier3Path.addCurveToPoint(CGPoint(x: frame.minX + 0.18333 * frame.width, y: frame.minY + 0.43363 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.23932 * frame.width, y: frame.minY + 0.45715 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.21198 * frame.width, y: frame.minY + 0.43363 * frame.height))
        bezier3Path.addCurveToPoint(CGPoint(x: frame.minX + 0.10911 * frame.width, y: frame.minY + 0.49635 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.15469 * frame.width, y: frame.minY + 0.43363 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.12734 * frame.width, y: frame.minY + 0.45715 * frame.height))
        bezier3Path.closePath()
        bezier3Path.miterLimit = 4;

        TestStyleKit.wirelessBlue.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.moveToPoint(CGPoint(x: frame.minX + 0.13906 * frame.width, y: frame.minY + 0.55646 * frame.height))
        bezier4Path.addLineToPoint(CGPoint(x: frame.minX + 0.15339 * frame.width, y: frame.minY + 0.58520 * frame.height))
        bezier4Path.addCurveToPoint(CGPoint(x: frame.minX + 0.18333 * frame.width, y: frame.minY + 0.56168 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.16120 * frame.width, y: frame.minY + 0.56952 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.17161 * frame.width, y: frame.minY + 0.56168 * frame.height))
        bezier4Path.addCurveToPoint(CGPoint(x: frame.minX + 0.21328 * frame.width, y: frame.minY + 0.58520 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.19505 * frame.width, y: frame.minY + 0.56168 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.20547 * frame.width, y: frame.minY + 0.57214 * frame.height))
        bezier4Path.addLineToPoint(CGPoint(x: frame.minX + 0.22760 * frame.width, y: frame.minY + 0.55646 * frame.height))
        bezier4Path.addCurveToPoint(CGPoint(x: frame.minX + 0.18333 * frame.width, y: frame.minY + 0.51987 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.21719 * frame.width, y: frame.minY + 0.53294 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.20026 * frame.width, y: frame.minY + 0.51987 * frame.height))
        bezier4Path.addCurveToPoint(CGPoint(x: frame.minX + 0.13906 * frame.width, y: frame.minY + 0.55646 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.16641 * frame.width, y: frame.minY + 0.51987 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.14948 * frame.width, y: frame.minY + 0.53294 * frame.height))
        bezier4Path.closePath()
        bezier4Path.miterLimit = 4;

        TestStyleKit.wirelessBlue.setFill()
        bezier4Path.fill()




        //// Group 3
        //// Page-1
        //// Bluetooth_Smart_Logo
        //// Shape Drawing
        let shapePath = UIBezierPath()
        shapePath.moveToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 15.11))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 30.1, y: group3.minY + 20.17))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 25.23))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 15.11))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 15.11))
        shapePath.closePath()
        shapePath.moveToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 46.07))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 30.1, y: group3.minY + 41.01))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 35.97))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 46.07))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.04, y: group3.minY + 46.07))
        shapePath.closePath()
        shapePath.moveToPoint(CGPoint(x: group3.minX + 19.64, y: group3.minY + 30.6))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 8.71, y: group3.minY + 19.63))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 11.88, y: group3.minY + 16.46))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 20.59, y: group3.minY + 25.17))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 20.59, y: group3.minY + 4.29))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 36.43, y: group3.minY + 20.13))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 25.97, y: group3.minY + 30.6))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 36.43, y: group3.minY + 41.05))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 20.59, y: group3.minY + 56.89))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 20.59, y: group3.minY + 36.02))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 11.88, y: group3.minY + 44.72))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 8.71, y: group3.minY + 41.55))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 19.64, y: group3.minY + 30.6))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 19.64, y: group3.minY + 30.6))
        shapePath.closePath()
        shapePath.moveToPoint(CGPoint(x: group3.minX + 22.57, y: group3.minY + 61.18))
        shapePath.addCurveToPoint(CGPoint(x: group3.minX + 45.13, y: group3.minY + 30.6), controlPoint1: CGPoint(x: group3.minX + 35.93, y: group3.minY + 61.18), controlPoint2: CGPoint(x: group3.minX + 45.13, y: group3.minY + 54.83))
        shapePath.addCurveToPoint(CGPoint(x: group3.minX + 22.57, y: group3.minY), controlPoint1: CGPoint(x: group3.minX + 45.13, y: group3.minY + 6.35), controlPoint2: CGPoint(x: group3.minX + 35.93, y: group3.minY))
        shapePath.addCurveToPoint(CGPoint(x: group3.minX, y: group3.minY + 30.6), controlPoint1: CGPoint(x: group3.minX + 9.22, y: group3.minY), controlPoint2: CGPoint(x: group3.minX, y: group3.minY + 6.35))
        shapePath.addCurveToPoint(CGPoint(x: group3.minX + 22.57, y: group3.minY + 61.18), controlPoint1: CGPoint(x: group3.minX, y: group3.minY + 54.83), controlPoint2: CGPoint(x: group3.minX + 9.22, y: group3.minY + 61.18))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 22.57, y: group3.minY + 61.18))
        shapePath.addLineToPoint(CGPoint(x: group3.minX + 22.57, y: group3.minY + 61.18))
        shapePath.closePath()
        shapePath.miterLimit = 4;

        shapePath.usesEvenOddFillRule = true;

        TestStyleKit.wirelessBlue.setFill()
        shapePath.fill()








        //// key.svg Group
        //// Group 4
        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.moveToPoint(CGPoint(x: frame.minX + 211.25, y: frame.minY + 27.5))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 202.5, y: frame.minY + 36.25), controlPoint1: CGPoint(x: frame.minX + 206.38, y: frame.minY + 27.5), controlPoint2: CGPoint(x: frame.minX + 202.5, y: frame.minY + 31.38))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 211.25, y: frame.minY + 45), controlPoint1: CGPoint(x: frame.minX + 202.5, y: frame.minY + 41.12), controlPoint2: CGPoint(x: frame.minX + 206.38, y: frame.minY + 45))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 220, y: frame.minY + 36.25), controlPoint1: CGPoint(x: frame.minX + 216.12, y: frame.minY + 45), controlPoint2: CGPoint(x: frame.minX + 220, y: frame.minY + 41.12))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 211.25, y: frame.minY + 27.5), controlPoint1: CGPoint(x: frame.minX + 220, y: frame.minY + 31.38), controlPoint2: CGPoint(x: frame.minX + 216.12, y: frame.minY + 27.5))
        bezier5Path.closePath()
        bezier5Path.moveToPoint(CGPoint(x: frame.minX + 209.38, y: frame.minY + 37.5))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 206.25, y: frame.minY + 34.38), controlPoint1: CGPoint(x: frame.minX + 207.62, y: frame.minY + 37.5), controlPoint2: CGPoint(x: frame.minX + 206.25, y: frame.minY + 36.12))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 209.38, y: frame.minY + 31.25), controlPoint1: CGPoint(x: frame.minX + 206.25, y: frame.minY + 32.62), controlPoint2: CGPoint(x: frame.minX + 207.62, y: frame.minY + 31.25))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 212.5, y: frame.minY + 34.38), controlPoint1: CGPoint(x: frame.minX + 211.12, y: frame.minY + 31.25), controlPoint2: CGPoint(x: frame.minX + 212.5, y: frame.minY + 32.62))
        bezier5Path.addCurveToPoint(CGPoint(x: frame.minX + 209.38, y: frame.minY + 37.5), controlPoint1: CGPoint(x: frame.minX + 212.5, y: frame.minY + 36.12), controlPoint2: CGPoint(x: frame.minX + 211.12, y: frame.minY + 37.5))
        bezier5Path.closePath()
        bezier5Path.miterLimit = 4;

        black.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.moveToPoint(CGPoint(x: frame.minX + 218.75, y: frame.minY + 38.75))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 213.75, y: frame.minY + 43.75))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 216.25, y: frame.minY + 46.25))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 216.25, y: frame.minY + 46.25))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 218.75, y: frame.minY + 46.25))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 218.75, y: frame.minY + 48.75))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 218.75, y: frame.minY + 48.75))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 221.25, y: frame.minY + 48.75))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 221.25, y: frame.minY + 51.25))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 222.12, y: frame.minY + 52.12))
        bezier6Path.addCurveToPoint(CGPoint(x: frame.minX + 223, y: frame.minY + 52.5), controlPoint1: CGPoint(x: frame.minX + 222.38, y: frame.minY + 52.38), controlPoint2: CGPoint(x: frame.minX + 222.62, y: frame.minY + 52.5))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 226.25, y: frame.minY + 52.5))
        bezier6Path.addCurveToPoint(CGPoint(x: frame.minX + 227.5, y: frame.minY + 51.25), controlPoint1: CGPoint(x: frame.minX + 227, y: frame.minY + 52.5), controlPoint2: CGPoint(x: frame.minX + 227.5, y: frame.minY + 52))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 227.5, y: frame.minY + 48))
        bezier6Path.addCurveToPoint(CGPoint(x: frame.minX + 227.12, y: frame.minY + 47.12), controlPoint1: CGPoint(x: frame.minX + 227.5, y: frame.minY + 47.63), controlPoint2: CGPoint(x: frame.minX + 227.38, y: frame.minY + 47.38))
        bezier6Path.addLineToPoint(CGPoint(x: frame.minX + 218.75, y: frame.minY + 38.75))
        bezier6Path.closePath()
        bezier6Path.miterLimit = 4;

        black.setFill()
        bezier6Path.fill()
    }

}
